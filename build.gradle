buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.3.2'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'jacoco'

apply plugin: 'maven-publish'
group=project.GROUP_ID

jacoco {
    toolVersion = "0.8.12"
}

tasks.register('jacocoTestReport', JacocoReport) {
    dependsOn "check"
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    getClassDirectories().setFrom(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs.from = android.sourceSets.main.java.srcDirs
    sourceDirectories.from = android.sourceSets.main.java.srcDirs
    executionData.from = 'build/jacoco/testDebug.exec'

    reports {
        html {
            enabled true
        }
        xml {
            enabled true
        }
    }

}

build.dependsOn jacocoTestReport

android {
    namespace "com.connectsdk"
    compileSdk = 34
    buildToolsVersion = '34.0.0'

    defaultConfig {
        minSdk = 21
        targetSdk = 34
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [
                    'src',
                    'core/src',
            ]
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['core/res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['core/jniLibs']
        }
        test {
            java.srcDirs = [
                    'core/test/src',
            ]
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled = true
        }
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig = true
    }

    useLibrary 'org.apache.http.legacy'
    ndkVersion "22.1.7171670"

    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            fullRelease(MavenPublication) {
                from components.release
                groupId = project.GROUP_ID
                artifactId = project.ARTIFACT_ID
                version = project.VERSION_NAME
            }
        }
    }
}

android.testOptions.unitTests.all {
    include '**/*Test.class'
}

dependencies {
    implementation 'org.java-websocket:Java-WebSocket:1.5.4'
    implementation 'javax.jmdns:jmdns:3.4.1'

    implementation 'androidx.annotation:annotation:1.7.1'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.googlecode.plist:dd-plist:1.23'
    implementation 'com.nimbusds:srp6a:2.1.0'
    implementation 'net.i2p.crypto:eddsa:0.3.0'
    implementation files('core/libs/lgcast-android-lib.jar')

    testImplementation 'org.apache.maven.plugins:maven-antrun-plugin:3.1.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.12.1'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.2'
    testImplementation 'xmlunit:xmlunit:1.6'
    testImplementation 'androidx.test:core:1.5.0'
}
